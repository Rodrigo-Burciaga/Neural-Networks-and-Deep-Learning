{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"TensorBoard Tutorial","version":"0.3.2","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"T63YMzz3Vbyf","colab_type":"text"},"source":["## Basic example TensorBoard"]},{"cell_type":"code","metadata":{"id":"rakNA9QKVbAn","colab_type":"code","outputId":"d52643f0-f3c6-42e4-c4aa-88356f87b8d4","executionInfo":{"status":"ok","timestamp":1561089982003,"user_tz":300,"elapsed":3759,"user":{"displayName":"Rodrigo Andrés Burciaga Ornelas","photoUrl":"","userId":"01811326954830511276"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["import tensorflow as tf\n","# To clear the defined variables and operations of the previous cell\n","tf.reset_default_graph()\n","# create graph\n","a = tf.constant(2, name='a')\n","b = tf.constant(3, name='b')\n","c = tf.add(a, b, name='addition')\n","# creating the writer out of the session\n","# writer = tf.summary.FileWriter('./graphs', tf.get_default_graph())\n","# launch the graph in a session\n","with tf.Session() as sess:\n","    # or creating the writer inside the session\n","    writer = tf.summary.FileWriter('./graphs', sess.graph)\n","    print(sess.run(c))"],"execution_count":1,"outputs":[{"output_type":"stream","text":["5\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"rUeeTs2cV7ow","colab_type":"text"},"source":["### Watch files and download to see in tensorboard"]},{"cell_type":"code","metadata":{"id":"RugO_0kDIBZ9","colab_type":"code","outputId":"e4533795-c58c-4fd7-ce5d-dc38a2286f14","executionInfo":{"status":"ok","timestamp":1561012425885,"user_tz":300,"elapsed":2883,"user":{"displayName":"Rodrigo Andrés Burciaga Ornelas","photoUrl":"","userId":"01811326954830511276"}},"colab":{"base_uri":"https://localhost:8080/","height":90}},"source":["!ls\n","%cd graphs/\n","!ls"],"execution_count":0,"outputs":[{"output_type":"stream","text":["sample_data\n","[Errno 2] No such file or directory: 'graphs/'\n","/content\n","sample_data\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"MSUinMh1WGpO","colab_type":"code","colab":{}},"source":["#download the file\n","from google.colab import files"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"gjCGldURXaz0","colab_type":"code","outputId":"9c9a44a8-9e1e-4577-b1fd-7fb4227758e2","executionInfo":{"status":"ok","timestamp":1561008988731,"user_tz":300,"elapsed":1583,"user":{"displayName":"Rodrigo Andrés Burciaga Ornelas","photoUrl":"","userId":"01811326954830511276"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["files.download('events.out.tfevents.1561008861.b5aff8d19e83')\n","%cd /content"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/content\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"aMoJ6ZnfT1Am","colab_type":"text"},"source":["## Scalar example and Histogram example\n"]},{"cell_type":"code","metadata":{"id":"8m2mdQSmdAqi","colab_type":"code","outputId":"9c00493c-0144-41f8-f7a1-70fd3c32c2cc","executionInfo":{"status":"ok","timestamp":1561095005560,"user_tz":300,"elapsed":3147,"user":{"displayName":"Rodrigo Andrés Burciaga Ornelas","photoUrl":"","userId":"01811326954830511276"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["#remove all graphs\n","%cd /content\n","!rm -rf /content/graphs"],"execution_count":11,"outputs":[{"output_type":"stream","text":["/content\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"gSQ-6-mNclsw","colab_type":"code","outputId":"b72d2c8a-815f-4aa0-cd48-1a26306955ae","executionInfo":{"status":"ok","timestamp":1561095182224,"user_tz":300,"elapsed":4708,"user":{"displayName":"Rodrigo Andrés Burciaga Ornelas","photoUrl":"","userId":"01811326954830511276"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["import tensorflow as tf\n","tf.reset_default_graph()   # To clear the defined variables and operations of the previous cell\n","# create the variables\n","x_scalar = tf.get_variable('x_scalar', shape=[], initializer=tf.truncated_normal_initializer(mean=0, stddev=1))\n","x_matrix = tf.get_variable('x_matrix', shape=[30, 40], initializer=tf.truncated_normal_initializer(mean=0, stddev=1))\n","# ____step 1:____ create the summaries\n","# A scalar summary for the scalar tensor\n","scalar_summary = tf.summary.scalar('My_scalar_summary', x_scalar)\n","# A histogram summary for the non-scalar (i.e. 2D or matrix) tensor\n","histogram_summary = tf.summary.histogram('My_histogram_summary', x_matrix)\n","# ____step 2:____ merge all summaries\n","merged = tf.summary.merge_all()\n","init = tf.global_variables_initializer()\n","# launch the graph in a session\n","with tf.Session() as sess:\n","    # ____step 3:____ creating the writer inside the session\n","    writer = tf.summary.FileWriter('./graphs', sess.graph)\n","    for step in range(100):\n","        # loop over several initializations of the variable\n","        sess.run(init)\n","        # ____step 4:____ evaluate the merged summaries\n","        summary = sess.run(merged)\n","        # ____step 5:____ add summary to the writer (i.e. to the event file) to write on the disc\n","        writer.add_summary(summary, step)\n","print('Done writing the summaries')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Done writing the summaries\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"E6pdx78Yc5nq","colab_type":"code","outputId":"a42b9a1c-a7c5-4562-dd8b-4b9c53dc327d","executionInfo":{"status":"ok","timestamp":1561095192416,"user_tz":300,"elapsed":3036,"user":{"displayName":"Rodrigo Andrés Burciaga Ornelas","photoUrl":"","userId":"01811326954830511276"}},"colab":{"base_uri":"https://localhost:8080/","height":72}},"source":["!ls\n","%cd graphs\n","!ls"],"execution_count":3,"outputs":[{"output_type":"stream","text":["graphs\tsample_data\n","/content/graphs\n","events.out.tfevents.1561095180.3834bc7a239b\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"oaApZ_dsdRDk","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":174},"outputId":"20b31915-e0f3-471a-93e0-eebc3b32f90d","executionInfo":{"status":"error","timestamp":1561095957921,"user_tz":300,"elapsed":311,"user":{"displayName":"Rodrigo Andrés Burciaga Ornelas","photoUrl":"","userId":"01811326954830511276"}}},"source":["files.download('events.out.tfevents.1561095180.3834bc7a239b')"],"execution_count":4,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-6c7a0aa6109f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mfiles\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdownload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'events.out.tfevents.1561095180.3834bc7a239b'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'files' is not defined"]}]},{"cell_type":"code","metadata":{"id":"VV2LJpkNeobj","colab_type":"code","outputId":"f25cf181-43fd-467c-b888-71048793c4ce","executionInfo":{"status":"ok","timestamp":1561089923027,"user_tz":300,"elapsed":1480,"user":{"displayName":"Rodrigo Andrés Burciaga Ornelas","photoUrl":"","userId":"01811326954830511276"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["!ls"],"execution_count":15,"outputs":[{"output_type":"stream","text":["events.out.tfevents.1561089793.7980bfb1dabf\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"LVArJwI1i1KX","colab_type":"text"},"source":["## Images example"]},{"cell_type":"code","metadata":{"id":"UjZ1xUO5i0SX","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":35},"outputId":"971992fd-080b-4629-8959-058f9b7560cf","executionInfo":{"status":"ok","timestamp":1561095943763,"user_tz":300,"elapsed":4664,"user":{"displayName":"Rodrigo Andrés Burciaga Ornelas","photoUrl":"","userId":"01811326954830511276"}}},"source":["import tensorflow as tf\n","tf.reset_default_graph()   # To clear the defined variables and operations of the previous cell\n","# create the variables\n","w_gs = tf.get_variable('W_Grayscale', shape=[30, 10], initializer=tf.truncated_normal_initializer(mean=0, stddev=1))\n","w_c = tf.get_variable('W_Color', shape=[50, 30], initializer=tf.truncated_normal_initializer(mean=0, stddev=1))\n","# ___step 0:___ reshape it to 4D-tensors\n","w_gs_reshaped = tf.reshape(w_gs, (3, 10, 10, 1))\n","w_c_reshaped = tf.reshape(w_c, (5, 10, 10, 3))\n","# ____step 1:____ create the summaries\n","gs_summary = tf.summary.image('Grayscale', w_gs_reshaped)\n","c_summary = tf.summary.image('Color', w_c_reshaped, max_outputs=5)\n","# ____step 2:____ merge all summaries\n","merged = tf.summary.merge_all()\n","# create the op for initializing all variables\n","init = tf.global_variables_initializer()\n","# launch the graph in a session\n","with tf.Session() as sess:\n","    # ____step 3:____ creating the writer inside the session\n","    writer = tf.summary.FileWriter('./graphs', sess.graph)\n","    # initialize all variables\n","    sess.run(init)\n","    # ____step 4:____ evaluate the merged op to get the summaries\n","    summary = sess.run(merged)\n","    # ____step 5:____ add summary to the writer (i.e. to the event file) to write on the disc\n","    writer.add_summary(summary)\n","    writer.flush()\n","print('Done writing the summaries')"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Done writing the summaries\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"8NsjrN_CjTbj","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":72},"outputId":"626a3f4e-1d40-4a36-a70e-57f9121ea4a9","executionInfo":{"status":"ok","timestamp":1561095950787,"user_tz":300,"elapsed":3072,"user":{"displayName":"Rodrigo Andrés Burciaga Ornelas","photoUrl":"","userId":"01811326954830511276"}}},"source":["!ls\n","%cd graphs\n","!ls"],"execution_count":2,"outputs":[{"output_type":"stream","text":["graphs\tsample_data\n","/content/graphs\n","events.out.tfevents.1561095941.31d494fee008\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"2Go0dImKjX5A","colab_type":"code","colab":{}},"source":["files.download('events.out.tfevents.1561095941.31d494fee008')"],"execution_count":0,"outputs":[]}]}